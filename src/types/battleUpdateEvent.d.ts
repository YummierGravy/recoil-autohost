/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface BattleUpdateEvent {
	battleId: string;
	/**
	 * Unix timestamp in microseconds
	 */
	time: number;
	update:
		| BattleStartUpdate
		| BattleOverUpdate
		| BattleServerMessageUpdate
		| BattleServerWarningUpdate
		| BattleServerQuitUpdate
		| BattleServerCrashUpdate
		| PlayerJoinedUpdate
		| PlayerLeftUpdate
		| PlayerChatUpdate
		| PlayerDefeatedUpdate
		| LuaMsgUpdate;
}
export interface BattleStartUpdate {
	type: 'battle_start';
}
export interface BattleOverUpdate {
	type: 'battle_over';
	userId: string;
	/**
	 * @minItems 1
	 */
	winningAllyTeams: [number, ...number[]];
}
export interface BattleServerMessageUpdate {
	type: 'battle_server_message';
	message: string;
}
export interface BattleServerWarningUpdate {
	type: 'battle_server_warning';
	message: string;
}
export interface BattleServerQuitUpdate {
	type: 'battle_server_quit';
}
export interface BattleServerCrashUpdate {
	type: 'battle_server_crash';
}
export interface PlayerJoinedUpdate {
	type: 'player_joined';
	userId: string;
	/**
	 * Player number in the game, can be useful for custom commands
	 */
	playerNumber: number;
}
export interface PlayerLeftUpdate {
	type: 'player_left';
	userId: string;
	reason: 'lost_connection' | 'left' | 'kicked';
}
export interface PlayerChatUpdate {
	type: 'player_chat';
	userId: string;
	message: string;
	destination: 'allies' | 'all' | 'spectators' | 'player';
	toUserId?: string;
}
export interface PlayerDefeatedUpdate {
	type: 'player_defeated';
	userId: string;
}
export interface LuaMsgUpdate {
	type: 'luamsg';
	userId: string;
	script: 'ui' | 'gaia' | 'rules';
	uiMode?: 'all' | 'allies' | 'spectators';
	data: string;
}
