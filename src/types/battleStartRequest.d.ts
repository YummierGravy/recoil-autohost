/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Floating value between 0 and 1
 */
export type Zero2One = number;

export interface BattleStartRequest {
	battleId: string;
	engineVersion: string;
	gameName: string;
	mapName: string;
	gameArchiveHash?: string;
	mapArchiveHash?: string;
	mapOptions?: {
		[k: string]: string;
	};
	gameOptions?: {
		[k: string]: string;
	};
	startDelay?: number;
	startPosType: 'fixed' | 'random' | 'ingame' | 'beforegame';
	/**
	 * @minItems 1
	 */
	allyTeams: [AllyTeam, ...AllyTeam[]];
	spectators?: Player[];
	/**
	 * Unit restrictions
	 */
	restrictions?: {
		[k: string]: number;
	};
}
export interface AllyTeam {
	teams: Team[];
	startbox?: {
		top: Zero2One;
		bottom: Zero2One;
		left: Zero2One;
		right: Zero2One;
	};
	/**
	 * Indexes into of the other allyteams to ally with
	 */
	allies?: number[];
	customOpts?: {
		[k: string]: string;
	};
}
export interface Team {
	players?: Player[];
	ais?: AI[];
	advantage?: number;
	incomeMultiplier?: number;
	side?: string;
	color?: {
		r: Zero2One;
		g: Zero2One;
		b: Zero2One;
	};
	startPos?: {
		x: number;
		z: number;
	};
	customOpts?: {
		[k: string]: string;
	};
}
export interface Player {
	userId: string;
	/**
	 * Name of the player, must be unique just like userId
	 */
	name: string;
	password: string;
	rank?: number;
	countryCode?: string;
	customOpts?: {
		[k: string]: string;
	};
}
export interface AI {
	/**
	 * UserId of the player hosting this AI
	 */
	hostUserId: string;
	shortName: string;
	version?: string;
	name?: string;
	options?: {
		[k: string]: string;
	};
}
